name: Docker Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. JDK 21 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3. gradlew 실행 권한 부여
      - name: Add execute permission to gradlew
        run: chmod +x gradlew

      # 4. Gradle build (테스트 제외)
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 5. Docker build
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/moonrabbit-app:latest .

      # 6. DockerHub 로그인
      - name: Login to DockerHub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # 7. Docker 이미지 푸시
      - name: Push Docker Image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/moonrabbit-app:latest

      # 8. EC2용 pem 키 파일 생성
      - name: Generate PEM key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          
      # env 파일 생성
      - name: Generate .env file
        run: |
          echo "${{ secrets.MOONRABBIT_ENV }}" > moonrabbit.env

      # 8.5. EC2에 .env 전송
      - name: Copy env file to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i private_key.pem moonrabbit.env ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/moonrabbit.env

      # 9. EC2에 SSH 접속 후 컨테이너 재시작
      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
            echo "DockerHub 로그인"
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

            echo "기존 컨테이너 중지 및 삭제"
            docker stop moonrabbit-app || true
            docker rm moonrabbit-app || true

            echo "Docker 이미지 Pull"
            docker pull ${{ secrets.DOCKER_USERNAME }}/moonrabbit-app:latest

            echo "컨테이너 실행"
            docker run -d --name moonrabbit-app -p 80:8080 \
              --env-file moonrabbit.env \
              ${{ secrets.DOCKER_USERNAME }}/moonrabbit-app:latest
          EOF
